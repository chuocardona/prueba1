---
- name: Detener servicios en servidores Windows
  hosts: windows_servers  # Grupo de hosts definido en el inventario
  gather_facts: no  # No recolectar facts para mayor velocidad
  vars:
    services: []  # Lista de servicios a gestionar (se puede sobrescribir)
    wait_time: 30  # Tiempo de espera en segundos
    max_retries: 3  # Número máximo de reintentos en caso de fallo
    delay_between_retries: 10  # Tiempo de espera entre reintentos (en segundos)

  tasks:
    - name: Verificar que los servicios existen
      ansible.windows.win_service_info:
        name: "{{ item.name }}"
      loop: "{{ services }}"
      register: service_info
      ignore_errors: yes  # Continuar incluso si falla

    - name: Mostrar información de los servicios
      debug:
        var: service_info

    - name: Detener los servicios (si existen)
      ansible.windows.win_service:
        name: "{{ item.item.name }}"
        state: stopped
      loop: "{{ service_info.results }}"
      when: item.exists
      register: stop_result
      retries: "{{ max_retries }}"
      delay: "{{ delay_between_retries }}"
      ignore_errors: yes  # Continuar incluso si falla

    - name: Mostrar resultado de la detención de los servicios
      debug:
        var: stop_result

    - name: Esperar {{ wait_time }} segundos después de detener cada servicio
      ansible.windows.win_shell: |
        Start-Sleep -Seconds {{ wait_time }}
      loop: "{{ service_info.results }}"
      when: item.exists
      loop_control:
        loop_var: item  # Variable de iteración para el bucle

# Llamar al playbook de reinicio (nivel superior)
- import_playbook: reinicio_servidor.yml
