# OBJETIVO: Ejemplo playbook para role de OS-WIN-ansible-role.CheckList.Averias
# ESCENARIO: Maquina de salto de Agbar
# REQUISITOS: Ninguno
#
# INVENTARIO-CONFIG: grupos y variables que se deben incluir en el inventario preferentemente (y no como input-vars). 
#                  Las variables opcionales se incluirán en el inventario, comentadas y con su valor por defecto. Indicar el tipo de cada variable.
#     Grupos: grupos requeridos en el inventario.
#     Group_vars: variables requeridas/opcionales. Indicar en cada caso de que tipo es (requerida/opcional), en que grupo debe ir (ALL u otros) y el tipo (integer, text, boolean, lista, diccionario). <Descripción>
#        ALL:
#| Variable          | Required | Default                              | Choices       | Comments                                                                                       |
#| :------------------: | :----------: |:--------------------------------------: | :---------------: | :------------------------------------------------------------------------------------------------: |
#| azure_url         | no      |    https://mdmabpro01sa.file.core.windows.net/sicab/MDMAB/Lectures/                              |               | Url al container de azure donde se alberga el fichero de Lectures|
#| sas_url           | yes      | None                                 |               | QueryString de la cadena SAS (Desde el "?" hasta el final http://google.es?image=123.png seria ?image=123.png|
#| checklist_code    | no      | CHK-0044                                 |               | Codigo checklist|
#| file_path         | no      |   \\srvdfs01\APLICACIONES\BIG_DATA_MDMB_PRO\MDMAB\Lectures\                               |               | Share del servidor local donde buscar el fichero inicialmente|
#

- name: Socks tunnel
  hosts: localhost
  connection: local
  tasks:
    - name: Setup socks tunnel
      ansible.builtin.import_role:
        name: ansible-role-event-socks-tunnel
      vars:
        acc_id: "{{ blueid_shortcode }}"
        transaction_id: "{{ tower_job_id }}"
        
- name: PLAYBOOK CONTROL EXISTENCIA FICHEROS
  hosts: all
  gather_facts: true
 # become: true
 # become_method: ansible.builtin.runas
  tasks:
    - name: CHECKLIST
      ansible.builtin.include_role:
        name: OS-WIN-ansible-role.CheckList.ControlExistenciaFicheros

- name: Upload Files to Sharepoint
  hosts: "{{ delegate_launch_node_linux if delegate_launch_node_linux | default('') else 'localhost' }}"
  gather_facts: true
  vars:
    #job_id: 1
    #gsma_code: 'SYN'
    create_folder_in_sp: false
    create_custom_folder: true
    custom_folder_name: "{{ gsma_code }}"
    upload_to_custom_folder: false
    create_subfolder_in_sp: true
    subfolder_name: "Checklist"
    upload_to_subfolder: true
    sharepoint_root_folder: 'at_role'
    sharepoint_site_url: 'https://kyndryl.sharepoint.com/teams/EnterpriseClientUnit-Ind.GenericTeam'        
    sp_teams_notification: false
    tower_src_path: "/tmp/dashboard_out/{{ job_id }}"
 
  tasks:
    - name: Upload to sharepoint
      ansible.builtin.include_role:
        name: ansible_role_sharepoint_upload
      register: sp_upload_result
      vars:
        sp_client_id: "{{ username }}"
        sp_client_secret: "{{ key }}"

    - name: Delete Output Files
      ansible.builtin.include_role:
        name: OS-WIN-ansible-role.CheckList.ControlExistenciaFicheros
      vars:
        fase: "delete"
      when:
        - sp_upload_result is defined and sp_upload_result is not none and sp_upload_result.failed | default(false) == false

    - name: Write output
      ansible.builtin.include_role:
        name: OS-LINUX-ansible-role.CSV.Dashboard
      register: csv_result
      vars:
        fase: "create"
        checklist_code: 'CHK-0044'
        task_name: "Control ficheros AZURE"
        task_code: 2
        task_description: "Control existencia ficheros AZURE"
        task_result_description: "{{ tk_result_description }}"
        task_result: "{{ tk_result }}"
